% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_llm_response.R
\name{get_llm_response}
\alias{get_llm_response}
\title{Send a request to a model on OpenRouter.ai}
\usage{
get_llm_response(
  user_prompt,
  model_id = "x-ai/grok-3-mini",
  system_prompt = NA_character_,
  context = NULL,
  temperature = 0,
  enable_reasoning = FALSE,
  reasoning_effort = "low",
  api_key = Sys.getenv("OPENROUTER_API_KEY")
)
}
\arguments{
\item{user_prompt}{A string containing the prompt or question for the model.}

\item{model_id}{A string specifying the model to use (e.g., "google/gemini-flash-1.5").
You can find model names on the OpenRouter.ai website.}

\item{system_prompt}{A string defining the role or behavior of the model. This is
only used for the first message in a conversation (when 'context' is NULL).}

\item{context}{A list representing the conversation history. If provided, the
'system_prompt' is ignored, as the context is assumed to contain the full
history. Defaults to NULL for a new conversation.}

\item{temperature}{A numeric value between 0 and 2 that controls the randomness
of the model's output. Higher values mean more creative responses.}

\item{enable_reasoning}{A logical toggle (TRUE/FALSE). When set to TRUE, it hints to
the model that it should "think" or use reasoning steps. The exact
behavior is model-dependent. It works by setting \code{tool_choice} to \code{"auto"}.}

\item{reasoning_effort}{A character string indicating the reasoning effort.}

\item{api_key}{A string containing your OpenRouter.ai API key. It is strongly
recommended to use the default, which retrieves the key from an
environment variable named \code{OPENROUTER_API_KEY}.}
}
\value{
A list containing three elements: 'response', 'context', and 'cost'.
'cost' is itself a list containing 'prompt_cost', 'completion_cost',
and 'total_cost' in USD.
}
\description{
This function sends a system prompt and a user prompt to a specified
language model through the OpenRouter.ai API and returns the text response.
It can also manage conversation history.
}
\examples{
\dontrun{
# Make sure to set your API key first
# Sys.setenv(OPENROUTER_API_KEY = "your_api_key_here")

# First turn of the conversation
first_turn <- get_llm_response(
  user_prompt = "What are the three main benefits of using R for data analysis?",
  model_id = "x-ai/grok-3-mini",
  system_prompt = "You are a helpful assistant who provides concise answers."
)
cat("--- Initial Response ---\n")
cat(first_turn$response)
cat(paste0("\n--- Total Cost: $",
format(first_turn$cost$total_cost, scientific = FALSE), " ---\n"))

# Follow-up question using the context from the first turn
second_turn <- get_llm_response(
  user_prompt = "Can you elaborate on the second benefit you mentioned?",
  model_id = "x-ai/grok-3-mini",
  context = first_turn$context
)
cat("\n\n--- Follow-up Response ---\n")
cat(second_turn$response)
cat(paste0("\n--- Total Cost: $", format(second_turn$cost$total_cost,
scientific = FALSE), " ---\n"))
}
}
